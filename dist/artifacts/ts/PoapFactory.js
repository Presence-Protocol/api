"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PoapFactoryInstance = exports.PoapFactory = void 0;
const web3_1 = require("@alephium/web3");
const PoapFactory_ral_json_1 = __importDefault(require("../PoapFactory.ral.json"));
const contracts_1 = require("./contracts");
const types_1 = require("./types");
class Factory extends web3_1.ContractFactory {
    constructor() {
        super(...arguments);
        this.eventIndex = { EventCreated: 0, PoapMinted: 1 };
        this.tests = {
            mintNewCollection: async (params) => {
                return (0, web3_1.testMethod)(this, "mintNewCollection", params, contracts_1.getContractByCodeHash);
            },
            mintPoap: async (params) => {
                return (0, web3_1.testMethod)(this, "mintPoap", params, contracts_1.getContractByCodeHash);
            },
            getNumEventsCreated: async (params) => {
                return (0, web3_1.testMethod)(this, "getNumEventsCreated", params, contracts_1.getContractByCodeHash);
            },
            convert: async (params) => {
                return (0, web3_1.testMethod)(this, "convert", params, contracts_1.getContractByCodeHash);
            },
        };
    }
    encodeFields(fields) {
        return (0, web3_1.encodeContractFields)((0, web3_1.addStdIdToFields)(this.contract, fields), this.contract.fieldsSig, types_1.AllStructs);
    }
    at(address) {
        return new PoapFactoryInstance(address);
    }
    stateForTest(initFields, asset, address) {
        return this.stateForTest_(initFields, asset, address, undefined);
    }
}
// Use this object to test and deploy the contract
exports.PoapFactory = new Factory(web3_1.Contract.fromJson(PoapFactory_ral_json_1.default, "", "fc90c7c55ef6d42e75e2c34732cead1f2ecf779ab4c450c1b93c0b713d6bc09e", types_1.AllStructs));
(0, contracts_1.registerContract)(exports.PoapFactory);
// Use this class to interact with the blockchain
class PoapFactoryInstance extends web3_1.ContractInstance {
    constructor(address) {
        super(address);
        this.view = {
            mintNewCollection: async (params) => {
                return (0, web3_1.callMethod)(exports.PoapFactory, this, "mintNewCollection", params, contracts_1.getContractByCodeHash);
            },
            mintPoap: async (params) => {
                return (0, web3_1.callMethod)(exports.PoapFactory, this, "mintPoap", params, contracts_1.getContractByCodeHash);
            },
            getNumEventsCreated: async (params) => {
                return (0, web3_1.callMethod)(exports.PoapFactory, this, "getNumEventsCreated", params === undefined ? {} : params, contracts_1.getContractByCodeHash);
            },
            convert: async (params) => {
                return (0, web3_1.callMethod)(exports.PoapFactory, this, "convert", params, contracts_1.getContractByCodeHash);
            },
        };
        this.transact = {
            mintNewCollection: async (params) => {
                return (0, web3_1.signExecuteMethod)(exports.PoapFactory, this, "mintNewCollection", params);
            },
            mintPoap: async (params) => {
                return (0, web3_1.signExecuteMethod)(exports.PoapFactory, this, "mintPoap", params);
            },
            getNumEventsCreated: async (params) => {
                return (0, web3_1.signExecuteMethod)(exports.PoapFactory, this, "getNumEventsCreated", params);
            },
            convert: async (params) => {
                return (0, web3_1.signExecuteMethod)(exports.PoapFactory, this, "convert", params);
            },
        };
    }
    async fetchState() {
        return (0, web3_1.fetchContractState)(exports.PoapFactory, this);
    }
    async getContractEventsCurrentCount() {
        return (0, web3_1.getContractEventsCurrentCount)(this.address);
    }
    subscribeEventCreatedEvent(options, fromCount) {
        return (0, web3_1.subscribeContractEvent)(exports.PoapFactory.contract, this, options, "EventCreated", fromCount);
    }
    subscribePoapMintedEvent(options, fromCount) {
        return (0, web3_1.subscribeContractEvent)(exports.PoapFactory.contract, this, options, "PoapMinted", fromCount);
    }
    subscribeAllEvents(options, fromCount) {
        return (0, web3_1.subscribeContractEvents)(exports.PoapFactory.contract, this, options, fromCount);
    }
    async multicall(callss) {
        return await (0, web3_1.multicallMethods)(exports.PoapFactory, this, callss, contracts_1.getContractByCodeHash);
    }
}
exports.PoapFactoryInstance = PoapFactoryInstance;
